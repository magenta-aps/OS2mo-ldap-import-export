{
  "init": {
    "it_systems": {
      "ADGUID": "Active Directory GUID",
      "ADSAMA": "Active Directory sAMAccountName",
    },
    "facets" : {
      "employee_address_type": {
        "EmailEmployee": {
          "title": "Email",
          "scope": "EMAIL"
        },
        "MobilePhoneEmployee": {
          "title": "Telefon (mobil)",
          "scope": "PHONE"
        },
        "PhoneEmployee": {
          "title": "Telefon",
          "scope": "PHONE"
        },
        "PrivatePhoneEmployee": {
          "title": "Telefon (privat)",
          "scope": "PHONE"
        },
        "LocationEmployee": {
          "title": "Lokation",
          "scope": "TEXT"
        },
        "DepartmentEmployee": {
          "title": "Afdeling",
          "scope": "TEXT"
        },
      },
      "org_unit_address_type": {
        "PostAdresseTextUnit": {
          "title": "Postadresse (fri tekst)",
          "scope": "TEXT"
        },
        "SecureEmailUnit": {
          "title": "Secure Email",
          "scope": "EMAIL"
        },
        "PublicEmailUnit": {
          "title": "Public Email",
          "scope": "EMAIL"
        },
      },
    },
  },
  "ldap_to_mo": {
    "Employee": {
      "objectClass": "ramodels.mo.employee.Employee",
      "_import_to_mo_": "manual_import_only",
      "cpr_no": "{{ldap.employeeNumber|strip_non_digits}}",
      "nickname_givenname": "{{ldap.displayName|splitlast|first}}",
      "nickname_surname": "{{ldap.displayName|splitlast|last}}",
      "uuid": "{{ employee_uuid or NONE }}"
    },
    "Engagement": {
      "objectClass": "ramodels.mo.details.engagement.Engagement",
      "_import_to_mo_": "false",
      "org_unit": "{{ dict(uuid=get_or_create_org_unit_uuid(ldap.extensionAttribute3)) }}",
      "job_function": "{{ dict(uuid=get_job_function_uuid(ldap.title)) }}",
      "engagement_type": "{{ dict(uuid=get_engagement_type_uuid('månedsløn')) }}",
      "user_key": "{{ ldap.employeeID }}",
      "validity": "{{ dict(from_date=now()|mo_datestring, to_date=ldap.extensionAttribute7|parse_datetime|mo_datestring or NONE) }}",// TODO: check to_date
      "person": "{{ dict(uuid=employee_uuid or NONE) }}",
      "primary": "{{ dict(uuid=get_primary_type_uuid('Ansat')) }}"
    },
    "PostAdresseTextUnit": {
      "objectClass": "ramodels.mo.details.address.Address",
      "_import_to_mo_": "manual_import_only",
      "value": "{{ nonejoin(ldap.streetAddress, ldap.postalCode, ldap.l) }}",
      "validity": "{{ dict(from_date=now()|mo_datestring) }}",
      "address_type": "{{ dict(uuid=get_org_unit_address_type_uuid('PostAdresseTextUnit')) }}",
      "org_unit": "{{ dict(uuid=get_or_create_org_unit_uuid(ldap.extensionAttribute3)) }}"
    },
    "PublicEmailUnit": {
      "objectClass": "ramodels.mo.details.address.Address",
      "_import_to_mo_": "manual_import_only",
      "value": "{{ldap.extensionAttribute5}}",
      "validity": "{{ dict(from_date = now()|mo_datestring) }}",
      "address_type": "{{ dict(uuid=get_org_unit_address_type_uuid('PublicEmailUnit')) }}",
      "org_unit": "{{ dict(uuid=get_or_create_org_unit_uuid(ldap.extensionAttribute3)) }}"
    },
    "SecureEmailUnit": {
      "objectClass": "ramodels.mo.details.address.Address",
      "_import_to_mo_": "manual_import_only",
      "value": "{{ldap.extensionAttribute4}}",
      "validity": "{{ dict(from_date = now()|mo_datestring) }}",
      "address_type": "{{ dict(uuid=get_org_unit_address_type_uuid('SecureEmailUnit')) }}",
      "org_unit": "{{ dict(uuid=get_or_create_org_unit_uuid(ldap.extensionAttribute3)) }}"
    },
    "EmailEmployee": {
      "objectClass": "ramodels.mo.details.address.Address",
      "_import_to_mo_": "true",
      "value": "{{ ldap.mail or NONE }}",
      "validity": "{{ dict(from_date = now()|mo_datestring) }}",
      "address_type": "{{ dict(uuid=get_employee_address_type_uuid('EmailEmployee')) }}",
      "person": "{{ dict(uuid=employee_uuid or NONE) }}"
    },
    "MobilePhoneEmployee": {
      "objectClass": "ramodels.mo.details.address.Address",
      "_import_to_mo_": "manual_import_only",
      "value": "{{ ldap.mobile or NONE }}",
      "validity": "{{ dict(from_date = now()|mo_datestring) }}",
      "address_type": "{{ dict(uuid=get_employee_address_type_uuid('MobilePhoneEmployee')) }}",
      "person": "{{ dict(uuid=employee_uuid or NONE) }}"
    },
    "PhoneEmployee": {
      "objectClass": "ramodels.mo.details.address.Address",
      "_import_to_mo_": "manual_import_only",
      "value": "{{ ldap.telephoneNumber or NONE }}",
      "validity": "{{ dict(from_date = now()|mo_datestring) }}",
      "address_type": "{{ dict(uuid=get_employee_address_type_uuid('PhoneEmployee')) }}",
      "person": "{{ dict(uuid=employee_uuid or NONE) }}"
    },
    "PrivatePhoneEmployee": {
      "objectClass": "ramodels.mo.details.address.Address",
      "_import_to_mo_": "manual_import_only",
      "value": "{{ ldap.homePhone or NONE }}",
      "validity": "{{ dict(from_date = now()|mo_datestring) }}",
      "address_type": "{{ dict(uuid=get_employee_address_type_uuid('PrivatePhoneEmployee')) }}",
      "person": "{{ dict(uuid=employee_uuid or NONE) }}",
      "visibility": "{{ dict(uuid=get_visibility_uuid('Hemmelig')) }}",
    },
    "LocationEmployee": {
      "objectClass": "ramodels.mo.details.address.Address",
      "_import_to_mo_": "manual_import_only",
      "value": "{{ ldap.physicalDeliveryOfficeName or NONE }}",
      "validity": "{{ dict(from_date=now()|mo_datestring) }}",
      "address_type": "{{ dict(uuid=get_employee_address_type_uuid('LocationEmployee')) }}",
      "person": "{{ dict(uuid=employee_uuid or NONE) }}"
    },
    "DepartmentEmployee": {
      "objectClass": "ramodels.mo.details.address.Address",
      "_import_to_mo_": "false",
      "value": "{{ ldap.department or NONE }}",
      "validity": "{{ dict(from_date=now()|mo_datestring) }}",
      "address_type": "{{ dict(uuid=get_employee_address_type_uuid('DepartmentEmployee')) }}",
      "person": "{{ dict(uuid=employee_uuid or NONE) }}"
    },
    "ADGUID": {
      "objectClass": "ramodels.mo.details.it_system.ITUser",
      "_import_to_mo_": "true",
      "user_key": "{{ ldap.objectGUID|remove_curly_brackets }}",
      "itsystem": "{{ dict(uuid=get_it_system_uuid('ADGUID')) }}",
      "validity": "{{ dict(from_date=now()|mo_datestring) }}",
      "person": "{{ dict(uuid=employee_uuid or NONE) }}"
    },
    "ADSAMA": {
      "objectClass": "ramodels.mo.details.it_system.ITUser",
      "_import_to_mo_": "true",
      "user_key": "{{ ldap.sAMAccountName }}",
      "itsystem": "{{ dict(uuid=get_it_system_uuid('ADSAMA')) }}",
      "validity": "{{ dict(from_date=now()|mo_datestring) }}",
      "person": "{{ dict(uuid=employee_uuid or NONE) }}"
    },
  },
  "mo_to_ldap": {
    "Employee": {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "employeeNumber": "{{mo_employee.cpr_no}}",
      "givenName" : "{{mo_employee.givenname}}",
      "sn": "{{mo_employee.surname}}",
      "displayName": "{{mo_employee.nickname_givenname}} {{mo_employee.nickname_surname}}",
      "extensionAttribute6": "{{mo_employee.uuid}}"
    },
    "Engagement" : {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "employeeNumber": "{{mo_employee.cpr_no}}",
      "extensionAttribute3": "{{get_org_unit_path_string(mo_employee_engagement.org_unit.uuid)}}",
      "title": "{{get_job_function_user_key(mo_employee_engagement.job_function.uuid)}}",
      "extensionAttribute7": "{{mo_employee_engagement.validity.to_date or NONE}}",
      "extensionAttribute2": "{{mo_employee_engagement.org_unit.uuid}}",
      "extensionAttribute6": "{{mo_employee_engagement.person.uuid}}",
      "employeeID": "{{mo_employee_engagement.user_key}}",
    },
    "PostAdresseTextUnit": {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "streetAddress": "{{mo_org_unit_address.value|splitlast(',')|first|splitlast(',')|first|trim}}",
      "postalCode": "{{mo_org_unit_address.value|splitlast(',')|first|splitlast(',')|last|trim}}",
      "l": "{{mo_org_unit_address.value|splitlast(',')|last|trim}}",
      "employeeNumber": "{{mo_employee.cpr_no}}",
      "extensionAttribute3": "{{get_org_unit_path_string(mo_org_unit_address.org_unit.uuid)}}",
      "extensionAttribute2": "{{mo_org_unit_address.org_unit.uuid}}"
    },
    "PublicEmailUnit": {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "extensionAttribute5": "{{mo_org_unit_address.value}}",
      "employeeNumber": "{{mo_employee.cpr_no}}",
      "extensionAttribute3": "{{get_org_unit_path_string(mo_org_unit_address.org_unit.uuid)}}",
      "extensionAttribute2": "{{mo_org_unit_address.org_unit.uuid}}"
    },
    "SecureEmailUnit": {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "extensionAttribute4": "{{mo_org_unit_address.value}}",
      "employeeNumber": "{{mo_employee.cpr_no}}",
      "extensionAttribute3": "{{get_org_unit_path_string(mo_org_unit_address.org_unit.uuid)}}",
      "extensionAttribute2": "{{mo_org_unit_address.org_unit.uuid}}"
    },
    "EmailEmployee": {
      "objectClass": "user",
      "_export_to_ldap_": "false",
      "mail": "{{mo_employee_address.value}}",
      "employeeNumber": "{{mo_employee.cpr_no}}",
      "extensionAttribute6": "{{mo_employee.uuid}}"
    },
    "MobilePhoneEmployee": {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "mobile": "{{mo_employee_address.value}}",
      "employeeNumber": "{{mo_employee.cpr_no}}",
      "extensionAttribute6": "{{mo_employee.uuid}}"
    },
    "PhoneEmployee": {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "telephoneNumber": "{{mo_employee_address.value}}",
      "employeeNumber": "{{mo_employee.cpr_no}}",
      "extensionAttribute6": "{{mo_employee.uuid}}"
    },
    "PrivatePhoneEmployee": {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "homePhone": "{{mo_employee_address.value}}",
      "employeeNumber": "{{mo_employee.cpr_no}}",
      "extensionAttribute6": "{{mo_employee.uuid}}"
    },
    "LocationEmployee": {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "physicalDeliveryOfficeName": "{{mo_employee_address.value}}",
      "employeeNumber": "{{mo_employee.cpr_no}}"
    },
    "DepartmentEmployee": {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "department": "{{mo_employee_address.value}}",
      "employeeNumber": "{{mo_employee.cpr_no}}"
    },
    "ADGUID": {
      "objectClass": "user",
      "_export_to_ldap_": "false",
      "objectGUID" : "{{ '{' + mo_employee_it_user.user_key + '}' }}",
      "employeeNumber": "{{mo_employee.cpr_no}}"
    },
    "ADSAMA": {
      "objectClass": "user",
      "_export_to_ldap_": "true",
      "sAMAccountName" : "{{ mo_employee_it_user.user_key }}",
      "userPrincipalName" : "{{ mo_employee_it_user.user_key + '@alleroed.dk'}}",
      "employeeNumber": "{{mo_employee.cpr_no}}"
    },

  },
  "username_generator": {
     "objectClass" : "AlleroedUserNameGenerator",
     "char_replacement":{
         "â": "a",
         "ä": "a",
         "à": "a",
         "å": "a",
         "Ä": "a",
         "Å": "a",
         "æ": "a",
         "Æ": "a",
         "á": "a",
         "Á": "a",
         "Â": "a",
         "À": "a",
         "ã": "a",
         "Ã": "a",
         "é": "e",
         "ê": "e",
         "ë": "e",
         "è": "e",
         "É": "e",
         "Ê": "e",
         "Ë": "e",
         "È": "e",
         "ï": "i",
         "î": "i",
         "ì": "i",
         "í": "i",
         "Î": "i",
         "Ï": "i",
         "ô": "o",
         "ö": "o",
         "ò": "o",
         "Ö": "o",
         "ø": "o",
         "Ø": "o",
         "ó": "o",
         "Ó": "o",
         "Ô": "o",
         "Ò": "o",
         "õ": "o",
         "Õ": "o",
         "ü": "u",
         "û": "u",
         "ù": "u",
         "Ü": "u",
         "ú": "u",
         "Ú": "u",
         "Û": "u",
         "Ù": "u",
         "ÿ": "y",
         "ý": "y",
         "Ý": "y",
         "Ç": "c",
         "ç": "c",
         "ñ": "n",
         "Ñ": "n"
     },
     // Note: We need some 'X's in this list. to account for potential duplicates
     // Note2: We need some short combinations in this list, to account for persons with
     // short names.
     //
     // Index:
     // F: First name
     // 1: First middle name
     // 2: Second middle name
     // 3: Third middle name
     // L: Last name
     // X: Number
     //
     // Example1: If combination = "F11LL", 'Hans Jakob Hansen' returns username="hjaha"
     // Example2: If combination = "FFLL", 'Hans Jakob Hansen' returns username="haha"
     "combinations_to_try": [
            // Try to make a username with 4 characters.
            "F111",
            "F112",
            "F122",
            "F222",
            "F223",
            "F233",
            "F333",

            "F11L",
            "F12L",
            "F22L",
            "F23L",
            "F33L",

            "F1LL",
            "F2LL",
            "F3LL",

            "FLLL",

            // If we get to here, we failed to make a username with 4 characters.
            "F111L",
            "F112L",
            "F122L",
            "F222L",
            "F223L",
            "F233L",
            "F333L",

            "F11LL",
            "F12LL",
            "F22LL",
            "F23LL",
            "F33LL",

            "F1LLL",
            "F2LLL",
            "F3LLL",

            "FLLLL",

            // If we get to here, we failed to make a username with 5 characters.
            "F1L",
            "F2L",
            "F3L",
            "FLL",

            // If we get to here, we failed to make a username with 3 characters.
            "FL",
            "FLX",

            // If we get to here, we failed to make a username that includes last-name
            "FFFF",
            "FFFFF",
            "FFF",
            "FF",
            "FFX",


     ],
     "forbidden_usernames":[]
   }
}

// *Valid address type names can be obtained by making a new address and folding out the
// 'Addressetype' listbox

// *Valid it system names can be obtained by making a new it-user and folding out the
// 'IT-systemer' listbox

// Note: Only keys in the relevant mo_to_ldap dicts are retrieved when requesting an
// ldap object
