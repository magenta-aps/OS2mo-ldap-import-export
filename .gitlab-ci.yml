# SPDX-FileCopyrightText: 2022 Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0

# ---------------------------------------------------------------------------
# Global
# ---------------------------------------------------------------------------
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .venv/
    - .cache/pip
    - .cache/pre-commit

stages:
  - lint
  - test
  - release
  - deploy

include:
  - project: labs/salt-automation
    ref: 'master'
    file: /gitlab-ci-templates/common/autopub.v1.yml
  - project: labs/salt-automation
    file: /gitlab-ci-templates/python/pypi.v1.yml
  - project: rammearkitektur/gitlab-ci-templates
    file: templates/poetry-precommit.yml
  - project: labs/salt-automation
    file: gitlab-ci-templates/python/pytest-meta.v1.yml
  - project: labs/salt-automation
    file: gitlab-ci-templates/common/docker-build.v1.yml
  - project: labs/salt-automation
    file: gitlab-ci-templates/common/docker-release.v1.yml


workflow:
  rules:
    - if: $CI_COMMIT_BRANCH

# ---------------------------------------------------------------------------
# Lint
# ---------------------------------------------------------------------------

Lint REUSE compliance:
  stage: lint
  image:
    name: fsfe/reuse:latest
    entrypoint: [""]
  script:
    - reuse lint

Lint Python:
  stage: lint
  extends: .lint-python
  script:
    - poetry run pre-commit run --all-files

# ---------------------------------------------------------------------------
# Test
# ---------------------------------------------------------------------------
Test:
  stage: test
  extends: .pytest
  variables:
    PYTEST_EXTRA_FLAGS: -m unittest

Export coverage:
  stage: test
  extends: .export_coverage
  needs: [Test]

Check coverage:
  stage: test
  extends: .check_coverage
  needs: [Test]
