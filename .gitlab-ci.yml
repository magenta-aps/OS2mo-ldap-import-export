# ---------------------------------------------------------------------------
# Global
# ---------------------------------------------------------------------------
variables:
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/os2mo-ldap_import_export
  IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
  PYTEST_COV_MODULE: mo_ldap_import_export
  PYTEST_COV_FAIL_UNDER: 100

stages:
  - lint
  - test
  - coverage
  - release
  - deploy

include:
  - project: labs/salt-automation
    file: /gitlab-ci-templates/common/autopub.v1.yml
  - project: labs/salt-automation
    file: gitlab-ci-templates/python/pytest-meta.v1.yml
  - project: labs/salt-automation
    file: gitlab-ci-templates/common/docker-release.v1.yml
  - project: labs/salt-automation
    file: gitlab-ci-templates/common/config-updater-meta.v1.yml
  - project: 'labs/salt-automation'
    file: "/gitlab-ci-templates/common/pre-commit.v1.yml"


#workflow:
#  rules:
#    - if: $CI_COMMIT_BRANCH

# ---------------------------------------------------------------------------
# Lint
# ---------------------------------------------------------------------------

Lint REUSE compliance:
  stage: lint
  image:
    name: fsfe/reuse:latest
    entrypoint: [""]
  script:
    - reuse lint

Lint Python:
  stage: lint
  extends: .lint-python
  before_script:
    - pip3 install poetry flake8 black
  script:
    - poetry run pre-commit run --all-files
    - flake8 --extend-ignore E501,E226,E203 mo_ldap_import_export/
    - black --check --diff mo_ldap_import_export/


# ---------------------------------------------------------------------------
# Test
# ---------------------------------------------------------------------------
Test:
  stage: test
  extends: .pytest
  variables:
    PYTEST_EXTRA_FLAGS: -m unittest

Export coverage:
  stage: coverage
  extends: .export_coverage
  needs: [Test]

Check coverage:
  stage: coverage
  extends: .check_coverage
  needs: [Test]
